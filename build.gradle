plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version '6.0.0-m2'
}

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}

def selenideVersion = "7.0.0",
    restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0",
    jupiterVersion = "5.9.3",
    slf4jVersion = "2.0.7"

allure
        {
            report {
                version.set(allureVersion)
            }
            adapter {
                aspectjWeaver.set(true)
                frameworks {
                    junit5 {
                        adapterVersion.set(allureVersion)
                    }
                }
            }
        }


dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$jupiterVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}
tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task regress_test(type: Test) {
    useJUnitPlatform {
        includeTags("regress")
    }
}

task smoke_test(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}